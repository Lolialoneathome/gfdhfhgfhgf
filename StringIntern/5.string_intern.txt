Интернироване строк - это процесс, при котором строки помещаются в пул интернирования. Пул интернирования - это внутренняя хэш таблица, где ключами являются строковые литералы, 
а значениями - ссылки на объект строки. Таким образом, если в приложении одна и та же строка используется в нескольких местах, с помощью интернирования можно сэкономить память.
Автоматически интернируются все строковые литералы, которые явно объявлены в приложении. Пример :

var internadStr = "I am interned string";  - попадет в пул интернирования и в дальнейшем при создании такой же строки, они будут указывать на один объект :
var internadStr = "I am interned string"; 

Методом String.Intern() можно добавить строку в пул интернирования, если её там еще нет. Если она там есть, метод вернёт ссылку на эту строку.

Строку можно изменить не меняя ссылку на объект, используя unsafe-код, но если строка была интернирована, соответственно она поменяется во всех местах, где используется.
//Пример, демонстрирующий это со stackoverflow:

public static void Main()
{
    A();
    Console.WriteLine("Hello world"); // Выведет "Hello bugs!"
}

public static unsafe void A()
{
    string s = string.Intern("Hello world");
    fixed (char* p = s)
    {
        p[6] = 'b'; p[7] = 'u'; p[8] = 'g'; p[9] = 's'; p[10] = '!';
    }
}